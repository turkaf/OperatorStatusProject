@model OperatorStatusProject.App.Models.DataViewModel;
@using System.Globalization
@using OperatorStatusProject.App.Entity

<div class="row mt-4">
    <div class="col-md-7">
        <table class="table table-dark table-borderless">
            <thead>
                <tr>
                    <th colspan="6" class="text-center">Üretim Operasyon Bildirimleri</th>
                </tr>
                <tr>
                    <th scope="col">Kayıt No</th>
                    <th scope="col">Başlangıç</th>
                    <th scope="col">Bitiş</th>
                    <th scope="col">Toplam Süre (Saat)</th>
                    <th scope="col">Statü</th>
                    <th scope="col">Duruş Nedeni</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.shiftData)
                {
                    <tr>
                        <td>@item.ShiftId</td>
                        <td>@item.StartTime.ToString("HH:mm")</td>
                        <td>@item.EndTime.ToString("HH:mm")</td>
                        <td>
                            @{
                                var timeDifference = item.EndTime - item.StartTime;
                                var totalMinutes = (int)timeDifference.TotalMinutes;
                                var hours = totalMinutes / 60;
                                var minutes = totalMinutes % 60;
                                var formattedTimeDifference = string.Format("{0}:{1:00}", hours, minutes);
                            }
                            @formattedTimeDifference
                        </td>
                        <td>@item.Status</td>
                        <td>@item.Reason</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="col-md-5">
        
        <table class="table table-dark table-borderless">
            <thead>
                <tr>
                    <th colspan="3" class="text-center">Standart Duruşlar</th>
                </tr>
                <tr>
                    <th scope="col">Başlangıç</th>
                    <th scope="col">Bitiş</th>
                    <th scope="col">Duruş Nedeni</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.stances)
                {
                    <tr>
                        <td>@item.StartTime.ToString("hh\\:mm")</td>
                        <td>@item.EndTime.ToString("hh\\:mm")</td>
                        <td>@item.Reason</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="row mt-2 mb-4">
    <div class="col-12 d-flex justify-content-center">
        <button type="button" class="btn btn-success" id="generateTableButton">Sonuç Tablosu İçin Tıklayınız</button>
    </div>
</div>

<div class="row mt-2">
    <div class="col-12">
        <table class="table table-dark table-borderless" id="resultTable">
            <thead>
                <tr>
                    <th colspan="6" class="text-center">Üretim Operasyon Bildirimleri</th>
                </tr>
                <tr>
                    <th scope="col">Kayıt No</th>
                    <th scope="col">Başlangıç</th>
                    <th scope="col">Bitiş</th>
                    <th scope="col">Toplam Süre (Saat)</th>
                    <th scope="col">Statü</th>
                    <th scope="col">Duruş Nedeni</th>
                </tr>
            </thead>
            <tbody>
                @* @foreach(var shiftData in Model.shiftData)
                {
                    var startTime = shiftData.StartTime.TimeOfDay;
                    var endTime = shiftData.EndTime.TimeOfDay;
                    var realEndTime = endTime;

                    @foreach (var stances in Model.stances)
                    {
                        if (endTime <= stances.StartTime)
                        {
                            <tr>
                                <td>@shiftData.ShiftId</td>
                                <td>@startTime.ToString("hh\\:mm")</td>
                                <td>@endTime.ToString("hh\\:mm")</td>
                                <td>
                                    @{
                                        var timeDifference = endTime - startTime;
                                        var totalMinutes = (int)timeDifference.TotalMinutes;
                                        var hours = totalMinutes / 60;
                                        var minutes = totalMinutes % 60;
                                        var formattedTimeDifference = string.Format("{0}:{1:00}", hours, minutes);
                                    }
                                    @formattedTimeDifference
                                </td>
                                <td>@shiftData.Status</td>
                                <td>@shiftData.Reason</td>
                            </tr>
                            break;
                        }
                        else if(startTime <= stances.StartTime && endTime > stances.EndTime)
                        {
                            <tr>
                                <td>@shiftData.ShiftId</td>
                                <td>@startTime.ToString("hh\\:mm")</td>
                                <td>@stances.StartTime.ToString("hh\\:mm")</td>
                                <td>
                                    @{
                                        var timeDifference = stances.StartTime - startTime;
                                        var totalMinutes = (int)timeDifference.TotalMinutes;
                                        var hours = totalMinutes / 60;
                                        var minutes = totalMinutes % 60;
                                        var formattedTimeDifference = string.Format("{0}:{1:00}", hours, minutes);
                                    }
                                    @formattedTimeDifference
                                </td>
                                <td>@shiftData.Status</td>
                                <td>@shiftData.Reason</td>
                            </tr>
                            startTime = stances.StartTime;
                            endTime = stances.EndTime;
                        }
                        else if(startTime == stances.StartTime && endTime == stances.EndTime)
                        {
                            <tr>
                                <td>@shiftData.ShiftId</td>
                                <td>@startTime.ToString("hh\\:mm")</td>
                                <td>@endTime.ToString("hh\\:mm")</td>
                                <td>
                                    @{
                                        var timeDifference = endTime - startTime;
                                        var totalMinutes = (int)timeDifference.TotalMinutes;
                                        var hours = totalMinutes / 60;
                                        var minutes = totalMinutes % 60;
                                        var formattedTimeDifference = string.Format("{0}:{1:00}", hours, minutes);
                                    }
                                    @formattedTimeDifference
                                </td>
                                <td>Duruş</td>
                                <td>@stances.Reason</td>
                            </tr>
                            startTime = stances.EndTime;
                            endTime = realEndTime;
                        }
                    }
                    endTime = realEndTime;
                } *@

                @{
                    for (int i = 0; i < Model.shiftData.Count; i++)
                    {
                        var data = Model.shiftData[i];
                        var startTime = data.StartTime.TimeOfDay;
                        var endTime = data.EndTime.TimeOfDay;
                        var realEndTime = endTime;

                        foreach (var stance in Model.stances)
                        {
                            if(data.EndTime.TimeOfDay < stance.StartTime)
                            {
                                <tr>
                                    <td>@data.ShiftId</td>
                                    <td>@data.StartTime.ToString("HH:mm")</td>
                                    <td>@data.EndTime.ToString("HH:mm")</td>
                                    <td>
                                        @{
                                            var timeDifference = data.EndTime - data.StartTime;
                                            var totalMinutes = (int)timeDifference.TotalMinutes;
                                            var hours = totalMinutes / 60;
                                            var minutes = totalMinutes % 60;
                                            var formattedTimeDifference = string.Format("{0}:{1:00}", hours, minutes);
                                        }
                                        @formattedTimeDifference
                                    </td>
                                    <td>@data.Status</td>
                                    <td>@data.Reason</td>
                                </tr>
                                break;
                            }
                            else if(startTime <= stance.StartTime && endTime >= stance.EndTime)
                            {
                                <tr>
                                    <td>@data.ShiftId</td>
                                    <td>@startTime.ToString("hh\\:mm")</td>
                                    <td>@stance.StartTime.ToString("hh\\:mm")</td>
                                    <td>
                                        @{
                                            var timeDifference = stance.StartTime - startTime;
                                            var totalMinutes = (int)timeDifference.TotalMinutes;
                                            var hours = totalMinutes / 60;
                                            var minutes = totalMinutes % 60;
                                            var formattedTimeDifference = string.Format("{0}:{1:00}", hours, minutes);
                                        }
                                        @formattedTimeDifference
                                    </td>
                                    <td>@data.Status</td>
                                    <td>@data.Reason</td>
                                </tr>
                                startTime = stance.StartTime;
                                endTime = stance.EndTime;
                                i--;
                                break;
                            }
                            else if(startTime == stance.EndTime && endTime == stance.EndTime)
                            {
                                StopCondition(stance, data);
                            }
                            else if(startTime >= stance.EndTime)
                            {
                                <tr>
                                    <td>@data.ShiftId</td>
                                    <td>@startTime.ToString("hh\\:mm")</td>
                                    <td>@endTime.ToString("hh\\:mm")</td>
                                    <td>
                                        @{
                                            var timeDifference = endTime - startTime;
                                            var totalMinutes = (int)timeDifference.TotalMinutes;
                                            var hours = totalMinutes / 60;
                                            var minutes = totalMinutes % 60;
                                            var formattedTimeDifference = string.Format("{0}:{1:00}", hours, minutes);
                                        }
                                        @formattedTimeDifference
                                    </td>
                                    <td>@data.Status</td>
                                    <td>@data.Reason</td>
                                </tr>
                            }
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@functions {
    string GetFormattedDuration(TimeSpan duration)
    {
        var totalMinutes = (int)duration.TotalMinutes;
        var hours = totalMinutes / 60;
        var minutes = totalMinutes % 60;
        var formattedTimeDifference = string.Format("{0}:{1:00}", hours, minutes);
        return formattedTimeDifference;
    }

    void StopCondition(StandartStances standartStances, ShiftData shiftData)
    {
        <tr>
            <td>@shiftData.ShiftId</td>
            <td>@standartStances.StartTime.ToString("hh\\:mm")</td>
            <td>@standartStances.EndTime.ToString("hh\\:mm")</td>
            <td>
                @{
                    var timeDifference = standartStances.EndTime - standartStances.StartTime;
                    var totalMinutes = (int)timeDifference.TotalMinutes;
                    var hours = totalMinutes / 60;
                    var minutes = totalMinutes % 60;
                    var formattedTimeDifference = string.Format("{0}:{1:00}", hours, minutes);
                }
                @formattedTimeDifference
            </td>
            <td>Duruş</td>
            <td>@standartStances.Reason</td>
        </tr>
    }
}